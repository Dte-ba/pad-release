{"version":3,"sources":["index.js"],"names":["env","process","NODE_ENV","require","osenv","path","fs","util","ProgressBar","localConfig","join","home","PAD_MODE","REPOSITORY_PATH","existsSync","cfg","JSON","parse","readFileSync","pad","bar","complete","incomplete","width","total","started","Date","startServer","progress","info","percent","update","fail","err","done","console","log","config","port","app","get","on","inspect"],"mappings":"AAAA;;;;AAIA;;AAEA;;AACA,IAAIA,MAAMC,QAAQD,GAAR,CAAYE,QAAZ,GAAuBD,QAAQD,GAAR,CAAYE,QAAZ,IAAwB,aAAzD;;AAEA,IAAGF,QAAQ,aAAR,IAAyBA,QAAQ,MAApC,EAA4C;AAC1C;AACAG,UAAQ,gBAAR;AACD;;AAED,IAAIC,QAAQD,QAAQ,OAAR,CAAZ;AACA,IAAIE,OAAOF,QAAQ,MAAR,CAAX;AACA,IAAIG,KAAKH,QAAQ,IAAR,CAAT;AACA,IAAII,OAAOJ,QAAQ,MAAR,CAAX;;AAEA,IAAIK,cAAcL,QAAQ,UAAR,CAAlB;;AAEA,IAAIM,cAAcJ,KAAKK,IAAL,CAAUN,MAAMO,IAAN,EAAV,EAAwB,MAAxB,CAAlB;;AAEAV,QAAQD,GAAR,CAAYY,QAAZ,GAAuB,QAAvB;AACAX,QAAQD,GAAR,CAAYa,eAAZ,GAA8BR,KAAKK,IAAL,CAAUN,MAAMO,IAAN,EAAV,CAA9B;;AAEA,IAAIL,GAAGQ,UAAH,CAAcL,WAAd,CAAJ,EAA+B;AAC7B,MAAIM,MAAMC,KAAKC,KAAL,CAAWX,GAAGY,YAAH,CAAgBT,WAAhB,EAA6B,OAA7B,CAAX,CAAV;AACAR,UAAQD,GAAR,CAAYa,eAAZ,GAA8BE,IAAIV,IAAlC;AACD;;AAED,IAAIc,MAAMhB,QAAQ,UAAR,CAAV;;AAEA,IAAIiB,MAAM,IAAIZ,WAAJ,CAAgB,qCAAhB,EAAuD;AAC/Da,YAAU,GADqD;AAE/DC,cAAY,GAFmD;AAG/DC,SAAO,EAHwD;AAI/DC,SAAO;AAJwD,CAAvD,CAAV;;AAOA,IAAIC,UAAU,IAAIC,IAAJ,EAAd;;AAEAP,IACGQ,WADH,GAEGC,QAFH,CAEY,UAASC,IAAT,EAAc;;AAExB,MAAIC,UAAUD,KAAKD,QAAnB;AACER,MAAIW,MAAJ,CAAWD,OAAX;AAED,CAPH,EAQGE,IARH,CAQQ,UAASC,GAAT,EAAa;AACjB,QAAMA,GAAN;AACD,CAVH,EAWGC,IAXH,CAWQ,YAAU;AACdC,UAAQC,GAAR,CAAY,4CAAZ,EAA0DjB,IAAIkB,MAAJ,CAAWC,IAArE,EAA2EnB,IAAIoB,GAAJ,CAAQC,GAAR,CAAY,KAAZ,CAA3E;AACD,CAbH;;AAeA,IAAIrB,IAAIoB,GAAJ,CAAQC,GAAR,CAAY,KAAZ,MAAuB,YAA3B,EAAyC;AACvCvC,UAAQwC,EAAR,CAAW,mBAAX,EAAgC,UAASR,GAAT,EAAc;AAC5CE,YAAQC,GAAR,CAAY,oBAAZ;AACAD,YAAQC,GAAR,CAAY7B,KAAKmC,OAAL,CAAaT,GAAb,CAAZ;AACD,GAHD;AAID","file":"index.js","sourcesContent":["/**\n * Index application file\n */\n\n'use strict';\n\n// Set default node environment to development\nvar env = process.env.NODE_ENV = process.env.NODE_ENV || 'development';\n\nif(env === 'development' || env === 'test') {\n  // Register the Babel require hook\n  require('babel-register');\n}\n\nvar osenv = require('osenv');\nvar path = require('path');\nvar fs = require('fs');\nvar util = require('util');\n\nvar ProgressBar = require('progress');\n\nvar localConfig = path.join(osenv.home(), '.pad');\n\nprocess.env.PAD_MODE = 'server';\nprocess.env.REPOSITORY_PATH = path.join(osenv.home());\n\nif (fs.existsSync(localConfig)){\n  var cfg = JSON.parse(fs.readFileSync(localConfig, 'utf-8'));\n  process.env.REPOSITORY_PATH = cfg.path;\n}\n\nvar pad = require('./app.js');\n\nvar bar = new ProgressBar(' Cargando contenido [:bar] :percent', {\n  complete: '=',\n  incomplete: ' ',\n  width: 20,\n  total: 100\n});\n\nvar started = new Date();\n\npad\n  .startServer()\n  .progress(function(info){\n    \n  var percent = info.progress;\n    bar.update(percent);\n\n  })\n  .fail(function(err){\n    throw err;\n  })\n  .done(function(){\n    console.log('Express server listening on %d, in %s mode', pad.config.port, pad.app.get('env'));\n  });\n\nif (pad.app.get('env') === \"production\") {\n  process.on('uncaughtException', function(err) {\n    console.log('Caught exception: ');\n    console.log(util.inspect(err))\n  });\n}"]}