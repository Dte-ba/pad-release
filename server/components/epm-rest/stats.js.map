{"version":3,"sources":["components/epm-rest/stats.js"],"names":["manager","require","async","_","module","exports","req","res","next","rname","params","repository","uid","get","progress","info","fail","err","done","repo","waterfall","cb","db","files","find","packages","map","item","file","findLast","f","filename","size","undefined","stats","area","content","axis","block","json"],"mappings":"AAAA;;AAEA,IAAIA,UAAUC,QAAQ,gBAAR,CAAd;;AAEA,IAAIC,QAAQD,QAAQ,OAAR,CAAZ;AACA,IAAIE,IAAIF,QAAQ,QAAR,CAAR;;AAEAG,OAAOC,OAAP,GAAkB,UAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAwB;AACxC,MAAIC,QAAQH,IAAII,MAAJ,CAAWC,UAAvB;AACA,MAAIC,MAAMN,IAAII,MAAJ,CAAWE,GAArB;;AAEAZ,UACGa,GADH,CACOJ,KADP,EAEGK,QAFH,CAEY,UAASC,IAAT,EAAc,CAEvB,CAJH,EAKGC,IALH,CAKQ,UAASC,GAAT,EAAa;AACjBT,SAAKS,GAAL;AACD,GAPH,EAQGC,IARH,CAQQ,UAASC,IAAT,EAAc;;AAElBjB,UACGkB,SADH,CACa;;AAET;AACA,cAASC,EAAT,EAAY;AACVF,WAAKG,EAAL,CAAQC,KAAR,CAAcC,IAAd,CAAmB,EAAnB,EAAuBH,EAAvB;AACD,KALQ;AAMT;AACA,cAASE,KAAT,EAAgBF,EAAhB,EAAmB;AACjBF,WACGK,IADH,CACQ,EADR,EACY,UAASP,GAAT,EAAcQ,QAAd,EAAuB;AAC/B,YAAIR,GAAJ,EAAS;AAAE,iBAAOI,GAAGJ,GAAH,CAAP;AAAiB;;AAE5BQ,mBAAWtB,EAAEuB,GAAF,CAAMD,QAAN,EAAgB,UAASE,IAAT,EAAc;AACvC,cAAIC,OAAOzB,EAAE0B,QAAF,CAAWN,KAAX,EAAkB,UAASO,CAAT,EAAW;AACtC,mBAAOA,EAAEC,QAAF,KAAeJ,KAAKI,QAA3B;AACD,WAFU,CAAX;AAGAJ,eAAKK,IAAL,GAAY,CAAZ;AACA,cAAIJ,SAASK,SAAb,EAAuB;AACrBN,iBAAKK,IAAL,GAAYJ,KAAKM,KAAL,CAAWF,IAAvB;AACD;AACD;AACA,iBAAO;AACLpB,iBAAKe,KAAKf,GADL;AAELuB,kBAAMR,KAAKS,OAAL,CAAaD,IAFd;AAGLE,kBAAMV,KAAKS,OAAL,CAAaC,IAHd;AAILC,mBAAOX,KAAKS,OAAL,CAAaE,KAJf;AAKLN,kBAAML,KAAKK;AALN,WAAP;AAOD,SAhBU,CAAX;;AAkBAX,WAAG,IAAH,EAASI,QAAT;AAED,OAxBH;AAyBD,KAjCQ,CADb,EAoCO,UAASR,GAAT,EAAcQ,QAAd,EAAuB;AACxB,UAAIR,GAAJ,EAAS;AACP,eAAOT,KAAKS,GAAL,CAAP;AACD;AACDV,UAAIgC,IAAJ,CAASd,QAAT;AACD,KAzCL;AA2CD,GArDH;AAuDD,CA3DD","file":"components/epm-rest/stats.js","sourcesContent":["'use strict';\n\nvar manager = require('../epm-manager');\n\nvar async = require('async');\nvar _ = require('lodash');\n\nmodule.exports =  function(req, res, next){\n  var rname = req.params.repository;\n  var uid = req.params.uid;\n  \n  manager\n    .get(rname)\n    .progress(function(info){\n\n    })\n    .fail(function(err){\n      next(err);\n    })\n    .done(function(repo){\n      \n      async\n        .waterfall([\n          \n          // find files\n          function(cb){\n            repo.db.files.find({}, cb);\n          },\n          //find packages\n          function(files, cb){\n            repo\n              .find({}, function(err, packages){\n                if (err) { return cb(err); }\n\n                packages = _.map(packages, function(item){\n                  var file = _.findLast(files, function(f){\n                    return f.filename === item.filename;\n                  });\n                  item.size = 0;\n                  if (file !== undefined){\n                    item.size = file.stats.size;\n                  }\n                  //console.log(item.size);\n                  return {\n                    uid: item.uid,\n                    area: item.content.area,\n                    axis: item.content.axis,\n                    block: item.content.block,\n                    size: item.size\n                  };\n                });\n\n                cb(null, packages)\n                \n              });\n          },\n\n          ], function(err, packages){\n            if (err) {\n              return next(err);\n            }\n            res.json(packages);\n          })\n      \n    });\n\n};"],"sourceRoot":"/source/"}